name: CI/CD - Deploy to EasyPanel

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  # Job 1: Testes e Validação
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests with pytest
        run: |
          pytest --verbose --color=yes
        continue-on-error: false

      - name: Check code quality
        run: |
          pip install flake8
          flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 app/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  # Job 2: Build Docker Image
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: sonda-marte-api:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          docker build -t sonda-marte-api:test .
          docker run -d -p 8000:8000 --name test-container sonda-marte-api:test
          sleep 5
          curl --fail http://localhost:8000/docs || exit 1
          docker stop test-container
          docker rm test-container

  # Job 3: Deploy to EasyPanel
  deploy:
    name: Deploy to EasyPanel
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to EasyPanel
        env:
          EASYPANEL_WEBHOOK: ${{ secrets.EASYPANEL_WEBHOOK_URL }}
        run: |
          if [ -z "$EASYPANEL_WEBHOOK" ]; then
            echo "⚠️ EASYPANEL_WEBHOOK_URL não configurado!"
            echo "Configure em: Settings > Secrets > Actions"
            exit 1
          fi
          
          echo "🚀 Triggering deployment..."
          response=$(curl -s -o /dev/null -w "%{http_code}" -X POST "$EASYPANEL_WEBHOOK")
          
          if [ "$response" = "200" ] || [ "$response" = "204" ]; then
            echo "✅ Deploy triggered successfully!"
          else
            echo "❌ Deploy failed with status: $response"
            exit 1
          fi

      - name: Notify deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "✅ Deployment completed successfully!"
            echo "🌐 API: https://seu-app.easypanel.host"
            echo "📚 Docs: https://seu-app.easypanel.host/docs"
          else
            echo "❌ Deployment failed!"
          fi